---
import '../styles/global.css';
import BackgroundCanvas from '../components/background/BackgroundCanvas.jsx';
import SideNavbar from '../components/nav/SideNavbar.jsx';
import Home from '../components/home/Home.jsx';
import Projects from '../components/projects/Projects.jsx';
import About from '../components/about/About.jsx';
import Experience from '../components/experience/Experience.jsx';
import Education from '../components/education/Education.jsx';
import Certifications from '../components/certifications/Certifications.jsx';
import Contact from '../components/contact/Contact.jsx';
import Skills from '../components/skills/Skills.jsx';

// Loading animation 
import Loading from '../components/loading/Loading.jsx';

// Image preprocessing for astro 
import { getImage } from 'astro:assets';
import inteleradLogo from '../assets/experienceLogos/intelerad-logo.jpeg';
import bdsrLogo from '../assets/experienceLogos/bdsr-logo-final.png';
import telusLogo from '../assets/experienceLogos/telus-icon.png';

// Navbar - My Logo 
import logoSvg from '../assets/myLogo/myFinalLogo.png';

// Skills Logos
import pythonLogo from '../assets/skills/python-logo-only.png';
import javaLogo from '../assets/skills/java.png';
import csharpLogo from '../assets/skills/c-sharp.png';
import javascriptLogo from '../assets/skills/javascript-icon.png';

import reactLogo from '../assets/skills/React-icon.png';
import redux from '../assets/skills/Redux-icon.png';
import tailwindLogo from '../assets/skills/Tailwind-icon.png';
import astroLogo from '../assets/skills/Astro-icon.png';

import aspLogo from '../assets/skills/Aspnet-core-icon.png';
import laravelLogo from '../assets/skills/Laravel-icon.png';
import nodeLogo from '../assets/skills/node-icon.png';
import flaskLogo from '../assets/skills/flask-logo.png';

import awsLogo from '../assets/skills/Aws-icon.png';
import gcpLogo from '../assets/skills/google-cloud.png';
import dockerLogo from '../assets/skills/docker-logo.webp';
import terraformLogo from '../assets/skills/terraform.png';

import postgresLogo from '../assets/skills/postgresql-logo.png';
import oracleLogo from '../assets/skills/oracle-db-icon.png';
import dbeaverLogo from '../assets/skills/dbeaver-icon.png';
import linuxLogo from '../assets/skills/Linux-icon.png';

import gitLogo from '../assets/skills/git.png';
import shellLogo from '../assets/skills/shell-icon.png';
import jiraLogo from '../assets/skills/jira-icon.png';
import githubActionsLogo from '../assets/skills/github-actions-icon.png';

import votingAppImg from '../assets/recentprojects/voting-app.webp';
import projectMgmtImg from '../assets/recentprojects/project-management.webp';
import inventoryMgmtImg from '../assets/recentprojects/inventory-management.webp';
import gomokuImg from '../assets/recentprojects/gomoku.webp';
import asciiRogueImg from '../assets/recentprojects/ascii-rogue.webp';
import mudGameImg from '../assets/recentprojects/mud-game.webp';
import flightReservationImg from '../assets/recentprojects/flight-reservation.webp';
import simplechatcpp from '../assets/recentprojects/simple-chat-cpp.webp';

const projectImages = {
  voting: (await getImage({ src: votingAppImg, width: 768 })).src,
  management: (await getImage({ src: projectMgmtImg, width: 768 })).src,
  inventory: (await getImage({ src: inventoryMgmtImg, width: 768 })).src,
  gomoku: (await getImage({ src: gomokuImg, width: 768 })).src,
  ascii: (await getImage({ src: asciiRogueImg, width: 768 })).src,
  mud: (await getImage({ src: mudGameImg, width: 768 })).src,
  flight: (await getImage({ src: flightReservationImg, width: 768 })).src,
  chat: (await getImage({ src: simplechatcpp, width: 768 })).src
};


const experienceImages = {
  intelerad: (await getImage({ src: inteleradLogo, width: 64 })).src,
  bdsr: (await getImage({ src: bdsrLogo, width: 64 })).src,
  telus: (await getImage({ src: telusLogo, width: 64 })).src
};


const experiences = [
  {
    company: "Bohrium Data & Security Research",
    role: "Assistant Developer",
    date: "Sept 2024 – Present | Toronto, ON",
    logo: experienceImages.bdsr,
    link: "#",
    points: [
      "Upgraded PostgreSQL clusters to v13+ with zero-downtime migrations.",
      "Containerized CMS platforms and deployed CI/CD pipelines in Docker.",
      "Planned backup and disaster recovery solutions.",
      "Led weekly client syncs to align goals and priorities.",
      "Tech: PostgreSQL, Sqitch, Docker, GCP, Git, Java, Bash"
    ]
  },
  {
    company: "Intelerad",
    role: "System Technology Specialist",
    date: "Jan 2024 – Sept 2024 | Toronto, ON",
    logo: experienceImages.intelerad,
    link: "https://www.intelerad.com/en/",
    points: [
      "Managed RHEL-based PACS and DICOM infrastructure for critical Radiology Systems.",
      "Tuned PostgreSQL and Sybase databases for HL7/DICOM services.",
      "Hardened systems via IPTables and OS-level security policies.",
      "Resolved SLA-bound incidents alongside dev and QA teams.",
      "Tech: RHEL, PostgreSQL, Sybase, HL7, Bash, IPTables, DICOM"
    ]
  },
  {
    company: "Telus",
    role: "Developer Analyst",
    date: "May 2022 – Aug 2023 | Montreal, QC",
    logo: experienceImages.telus,
    link: "https://www.telus.com",
    points: [
      "Supported GCP Storage, Compute, and Cloud SQL for enterprise clients.",
      "Wrote documentation that reduced escalations by 25%.",
      "Diagnosed networking and IAM issues using Stackdriver and Bash.",
      "Partnered with architects and engineers to resolve outages.",
      "Tech: GCP, Bash, Git, Jira, Networking, IAM"
    ]
  },
];


// logo image preprocessing
const logo = (await getImage({ src: logoSvg, width: 64 })).src; // or 48/32 if needed

// Skills image preprocessing
const skillsImages = {
  // Languages
  python: (await getImage({ src: pythonLogo, width: 64 })).src,
  java: (await getImage({ src: javaLogo, width: 64 })).src,
  csharp: (await getImage({ src: csharpLogo, width: 64 })).src,
  javascript: (await getImage({ src: javascriptLogo, width: 64 })).src,

  // Frontend
  react: (await getImage({ src: reactLogo, width: 64 })).src,
  redux: (await getImage({ src: redux, width: 64 })).src,
  tailwind: (await getImage({ src: tailwindLogo, width: 64 })).src,
  astro: (await getImage({ src: astroLogo, width: 64 })).src,

  // Backend & APIs
  aspnet: (await getImage({ src: aspLogo, width: 64 })).src,
  laravel: (await getImage({ src: laravelLogo, width: 64 })).src,
  node: (await getImage({ src: nodeLogo, width: 64 })).src,
  flask: (await getImage({ src: flaskLogo, width: 64 })).src,

  // Cloud & DevOps
  aws: (await getImage({ src: awsLogo, width: 64 })).src,
  gcp: (await getImage({ src: gcpLogo, width: 64 })).src,
  docker: (await getImage({ src: dockerLogo, width: 64 })).src,
  terraform: (await getImage({ src: terraformLogo, width: 64 })).src,

  // Databases & Systems
  postgresql: (await getImage({ src: postgresLogo, width: 64 })).src,
  oracle: (await getImage({ src: oracleLogo, width: 64 })).src,
  dbeaver: (await getImage({ src: dbeaverLogo, width: 64 })).src,
  linux: (await getImage({ src: linuxLogo, width: 64 })).src,

  // Tools & Platforms
  git: (await getImage({ src: gitLogo, width: 64 })).src,
  shell: (await getImage({ src: shellLogo, width: 64 })).src,
  jira: (await getImage({ src: jiraLogo, width: 64 })).src,
  githubactions: (await getImage({ src: githubActionsLogo, width: 64 })).src,
};

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href={logo} />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Henrique Custodio</title>
		<link href="https://fonts.googleapis.com/css2?family=Saira:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
		<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
/>
	</head>
	<body>

    <Loading client:load />
		<BackgroundCanvas client:only="react" />

		<SideNavbar logo={logo} client:load /> 
		<Home client:load />
		<Projects images={projectImages} client:idle />
		<About client:visible />
		<Experience experiences={experiences} client:visible />
		<Education client:visible />
		<Skills skillImages={skillsImages} client:visible />
		<Certifications client:visible />
		<Contact client:visible />

	</body>
</html>
